@startuml

abstract class Calculator {
	{abstract} double calculate()
}

class SingleCalculator {
	double num
	SingleCalculator(double num)
	double calculate()
}

abstract class Operation {
	Calculator calculator
	double operand

	Operation(double operand, Calculator calculator)
}

class PlusOperation {
	PlusOperation(double operand, Calculator calculator)
	double calculate()
}

class MinusOperation {
	MinusOperation(double operand, Calculator calculator)
	double calculate()
}

class MultiplyOperation {
	MultiplyOperation(double operand, Calculator calculator)
	double calculate()
}

Calculator <|-- SingleCalculator
Calculator <|-- Operation
Calculator <--o Operation
Operation <|-- PlusOperation
Operation <|-- MinusOperation
Operation <|-- MultiplyOperation

@enduml